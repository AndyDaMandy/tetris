{
  "name": "tetris",
  "version": "1.0.0",
  "description": "- Rename variables tracking recent state transitions to `did_*`\r     - Rename `fill_occurred` to `did_lock`\r     - Rename `applied_gravity` to `did_apply_gravity`\r - Hide access to invalidated state.\r     - E.g. if `score_did_rotate_last` is false, `score_last_kick_applied` may be stale. Consider updating both:\r         ```js\r             function make_scorer () {\r                 const obj = {};\r                 let did_rotate_last = false;\r                 let last_kick_applied = null;\r                 obj.clear_rotate = function () {\r                     did_rotate_last = false;\r                 }\r                 obj.did_rotate = function(last_kick) {\r                     did_rotate_last = true;\r                     last_kick_applied = last_kick;\r                 }\r                 obj.did_lock = function () {\r                     // Tetrimino locked. Check for scoring.\r                 }\r             }\r         ```\r --\r I had this logic:\r ```javascript\r did_move ||= try_move(\"left\");\r ```",
  "main": "game.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/kevinAlbs/tetris.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/kevinAlbs/tetris/issues"
  },
  "homepage": "https://github.com/kevinAlbs/tetris#readme",
  "devDependencies": {
    "eslint": "^8.40.0"
  }
}
